{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\TTT\\\\TodoWebAppReact\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { useApiClient } from './Services/api/apiClient';\nimport { useEffect, useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let todosApi = useApiClient();\n  const [todos, setTodos] = useState([]);\n\n  const getTodos = async () => {\n    let response;\n    response = await todosApi.getTodos();\n    setTodos(response.body);\n  };\n\n  const addTodos = async text => {\n    await todosApi.addTodos(text); //console.log(response);\n    //if (response.status === 200) {\n    //    getTodos();\n    //}\n    //console.log(\"Error adding a task!\");\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = e => {\n    setInputValue(e.currentTarget.value);\n  };\n\n  const handleComplete = e => {//console.log(\"handleComplete\");\n    //const index = e.currentTarget.getAttribute(\"data-index\");\n    //const newTodos = [...todos];\n    //newTodos[index].completed = !newTodos[index].completed;\n    // setTodos(newTodos);\n  };\n\n  const handleRemove = e => {\n    e.stopPropagation();\n    const index = e.currentTarget.getAttribute(\"data-index\");\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!inputValue) return;\n    await addTodos(inputValue);\n    setInputValue('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contain\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      className: \"saveBtn\",\n      onClick: handleComplete,\n      children: \"Add New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((_ref, i) => {\n        let {\n          text,\n          completed,\n          id\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          \"aria-role\": \"button\",\n          className: completed ? 'complete' : \"\",\n          \"data-index\": i,\n          onClick: handleComplete,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            \"aria-label\": `remove todo ${i}`,\n            className: \"remove\",\n            \"data-index\": i,\n            onClick: handleRemove\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"jhDsSQmIq8Lme85y5S6O9tJFGU8=\", false, function () {\n  return [useApiClient];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Dev/TTT/TodoWebAppReact/src/App.tsx"],"names":["React","useApiClient","useEffect","useState","Button","App","todosApi","todos","setTodos","getTodos","response","body","addTodos","text","inputValue","setInputValue","handleInputChange","e","currentTarget","value","handleComplete","handleRemove","stopPropagation","index","getAttribute","newTodos","splice","handleSubmit","preventDefault","map","i","completed","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { HttpResponse, useApiClient } from './Services/api/apiClient';\r\nimport { useEffect, useState } from 'react';\r\nimport { TodoModel } from './types/apiClient';\r\nimport { KeyboardEvent } from \"react\";\r\nimport { Button } from '@material-ui/core';\r\n\n function App() {\n\n     let todosApi = useApiClient();\n     const [todos, setTodos] = useState<TodoModel[]>([]);\n\n     const getTodos = async () => {\r\n         let response: HttpResponse<TodoModel[]>;\r\n\r\n         response = await todosApi.getTodos();\r\n         setTodos(response.body as TodoModel[]);      \r\n     };\n\n     const addTodos = async (text:string) => {\r\n         await todosApi.addTodos(text);\r\n         //console.log(response);\r\n         //if (response.status === 200) {\r\n         //    getTodos();\r\n         //}\r\n         //console.log(\"Error adding a task!\");\r\n     };\n \r\n     useEffect(() => {\r\n         getTodos();\r\n     }, [])\n\r\n     const [inputValue, setInputValue] = useState(\"\");      \r\n\r\n    const handleInputChange = (e: { currentTarget: { value: React.SetStateAction<string>; }; }) => {\r\n        setInputValue(e.currentTarget.value);\r\n    }\r\n\r\n    const handleComplete = (e: { currentTarget: { getAttribute: (arg0: string) => any; }; }) => {\r\n        //console.log(\"handleComplete\");\r\n        //const index = e.currentTarget.getAttribute(\"data-index\");\r\n        //const newTodos = [...todos];\r\n        //newTodos[index].completed = !newTodos[index].completed;\r\n       // setTodos(newTodos);\r\n    };\r\n\r\n    const handleRemove = (e: { stopPropagation: () => void; currentTarget: { getAttribute: (arg0: string) => any; }; }) => {\r\n        e.stopPropagation();\r\n        const index = e.currentTarget.getAttribute(\"data-index\");\r\n        const newTodos = [...todos];\r\n        newTodos.splice(index, 1);\r\n        setTodos(newTodos);\r\n    };\r\n\r\n     const handleSubmit = async (e: { preventDefault: () => void; }) => {\r\n            e.preventDefault();\r\n            if (!inputValue) return;\r\n            await addTodos(inputValue);            \r\n            setInputValue('');\r\n    };\r\n\n    return (\r\n        <div className=\"contain\">\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n            <Button variant=\"contained\" className=\"saveBtn\" onClick={handleComplete}>Add New</Button>\r\n            <ul>                \r\n                {todos.map(({ text, completed, id }, i) => (\r\n                    <li\r\n                        aria-role=\"button\"\r\n                        className={completed ? 'complete' : \"\"}\r\n                        data-index={i}\r\n                        onClick={handleComplete}\r\n                    >\r\n                        <div>{text}</div>\r\n\r\n                        <button\r\n                            aria-label={`remove todo ${i}`}\r\n                            className=\"remove\"\r\n                            data-index={i}\r\n                            onClick={handleRemove}\r\n                        />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}