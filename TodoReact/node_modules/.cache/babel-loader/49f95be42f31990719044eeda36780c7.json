{"ast":null,"code":"export const useApiClient = () => {\n  const baseUrl = \"https://localhost:7192/\";\n  const todoApriUrl = baseUrl + \"Todo\";\n\n  async function getTodos() {\n    let response;\n    response = await sendAnonymousRequest(\"GET\", todoApriUrl);\n    return response.status === 200 ? await response.body : null;\n  }\n\n  async function sendAnonymousRequest(verb, url, payload) {\n    let request = {\n      method: verb,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Client-Version\": \"v1\",\n        \"Access-Control-Allow-Origin\": '*',\n        \"Access-Control-Allow-Headers\": \"X-Requested-With\",\n        \"mode\": 'no-cors'\n      }\n    };\n    if (payload) request.body = JSON.stringify(payload);\n    const response = await fetch(url, request);\n    console.log(response);\n    return response;\n  }\n\n  return {\n    getTodos\n  };\n};","map":{"version":3,"sources":["C:/Dev/TTT/TodoWebAppReact/src/Services/api/apiClient.ts"],"names":["useApiClient","baseUrl","todoApriUrl","getTodos","response","sendAnonymousRequest","status","body","verb","url","payload","request","method","headers","Accept","JSON","stringify","fetch","console","log"],"mappings":"AAgBA,OAAO,MAAMA,YAAY,GAAG,MAAM;AAE9B,QAAMC,OAAO,GAAG,yBAAhB;AACA,QAAMC,WAAW,GAAGD,OAAO,GAAG,MAA9B;;AAGA,iBAAeE,QAAf,GAA0B;AAEtB,QAAIC,QAAJ;AACAA,IAAAA,QAAQ,GAAG,MAAMC,oBAAoB,CAAC,KAAD,EAAQH,WAAR,CAArC;AACA,WAAOE,QAAQ,CAACE,MAAT,KAAoB,GAApB,GAA0B,MAAMF,QAAQ,CAACG,IAAzC,GAAgE,IAAvE;AACH;;AAGD,iBAAeF,oBAAf,CACIG,IADJ,EAEIC,GAFJ,EAGIC,OAHJ,EAIE;AACE,QAAIC,OAAO,GAAG;AACVC,MAAAA,MAAM,EAAEJ,IADE;AAEVK,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB,kBAFX;AAGL,0BAAkB,IAHb;AAIL,uCAA+B,GAJ1B;AAKL,wCAAgC,kBAL3B;AAML,gBAAQ;AANH;AAFC,KAAd;AAYA,QAAIJ,OAAJ,EAAaC,OAAO,CAACJ,IAAR,GAAeQ,IAAI,CAACC,SAAL,CAAeN,OAAf,CAAf;AAEb,UAAMN,QAAQ,GAAG,MAAMa,KAAK,CAACR,GAAD,EAAME,OAAN,CAA5B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AACA,WAAOA,QAAP;AACH;;AAED,SAAO;AACHD,IAAAA;AADG,GAAP;AAGH,CAzCM","sourcesContent":["\r\ninterface TodoModel {\r\n    id: string;\r\n    dwsOrderStatus: string | null;\r\n    text: string | null;\r\n    completed: boolean | null;\r\n}\r\n\r\nexport interface HttpResponse<T> {\r\n    readonly ok: boolean;\r\n    readonly status: number;\r\n    readonly body: T | null;\r\n}\r\n\r\ndeclare const window: any;\r\n\r\nexport const useApiClient = () => {\r\n     \r\n    const baseUrl = \"https://localhost:7192/\";\r\n    const todoApriUrl = baseUrl + \"Todo\";\r\n\r\n\r\n    async function getTodos() {\r\n\r\n        let response: HttpResponse<TodoModel[]>;\r\n        response = await sendAnonymousRequest(\"GET\", todoApriUrl);\r\n        return response.status === 200 ? await response.body as TodoModel[]  : null;\r\n    }\r\n\r\n\r\n    async function sendAnonymousRequest(\r\n        verb: string,\r\n        url: string,\r\n        payload?: any\r\n    ) {\r\n        let request = {\r\n            method: verb,\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Client-Version\": \"v1\",\r\n                \"Access-Control-Allow-Origin\": '*',\r\n                \"Access-Control-Allow-Headers\": \"X-Requested-With\",\r\n                \"mode\": 'no-cors'\r\n            },\r\n        } as any;\r\n     \r\n        if (payload) request.body = JSON.stringify(payload);\r\n\r\n        const response = await fetch(url, request);\r\n        console.log(response);\r\n        return response;\r\n    }\r\n\r\n    return {\r\n        getTodos\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}