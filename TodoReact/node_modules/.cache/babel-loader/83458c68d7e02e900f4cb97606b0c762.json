{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\Int\\\\TodoWebAppReact\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { useApiClient } from './Services/api/apiClient';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let todosApi = useApiClient();\n  const [todos, setTodos] = useState([]);\n\n  const getTodos = async () => {\n    let response;\n    response = await todosApi.getTodos();\n    setTodos(response.body);\n  };\n\n  const addTodos = async text => {\n    await todosApi.addTodos(text);\n  };\n\n  const removeTodo = async guid => {\n    await todosApi.removeTodo(guid);\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = e => {\n    setInputValue(e.currentTarget.value);\n  };\n\n  const handleComplete = e => {\n    console.log(\"handleComplete\");\n    const index = e.currentTarget.getAttribute(\"data-index\");\n    const newTodos = [...todos];\n    newTodos[index].completed = !newTodos[index].completed;\n    setTodos(newTodos);\n  };\n\n  const handleRemove = e => {\n    e.stopPropagation();\n    const index = e.currentTarget.getAttribute(\"data-index\");\n    var taskToDelete = todos[index];\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n    removeTodo(taskToDelete.id);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!inputValue) return;\n    addTodos(inputValue);\n    setInputValue('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contain\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((_ref, i) => {\n        let {\n          text,\n          completed,\n          id\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          \"aria-role\": \"button\",\n          className: completed ? 'complete' : \"\",\n          \"data-index\": i,\n          onClick: handleComplete,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: text !== null && text !== void 0 ? text : \"\",\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            \"aria-label\": `remove todo ${i}`,\n            className: \"remove\",\n            \"data-index\": i,\n            onClick: handleRemove\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"jhDsSQmIq8Lme85y5S6O9tJFGU8=\", false, function () {\n  return [useApiClient];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Dev/Int/TodoWebAppReact/src/App.tsx"],"names":["React","useApiClient","useEffect","useState","App","todosApi","todos","setTodos","getTodos","response","body","addTodos","text","removeTodo","guid","inputValue","setInputValue","handleInputChange","e","currentTarget","value","handleComplete","console","log","index","getAttribute","newTodos","completed","handleRemove","stopPropagation","taskToDelete","splice","id","handleSubmit","preventDefault","map","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { HttpResponse, useApiClient } from './Services/api/apiClient';\r\nimport { useEffect, useState } from 'react';\r\nimport { TodoModel } from './types/apiClient';\r\nimport { KeyboardEvent } from \"react\";\r\nimport { Button } from '@material-ui/core';\r\n\n function App() {\n\n     let todosApi = useApiClient();\n     const [todos, setTodos] = useState<TodoModel[]>([]);\n\n     const getTodos = async () => {\r\n         let response: HttpResponse<TodoModel[]>;\r\n\r\n         response = await todosApi.getTodos();\r\n         setTodos(response.body as TodoModel[]);      \r\n     };\n\n     const addTodos = async (text:string) => {\r\n         await todosApi.addTodos(text);\r\n     };\n\n     const removeTodo = async (guid: string) => {\r\n         await todosApi.removeTodo(guid);\r\n     };\n \r\n     useEffect(() => {\r\n         getTodos();\r\n     }, [])\n\r\n     const [inputValue, setInputValue] = useState(\"\");      \r\n\r\n    const handleInputChange = (e: { currentTarget: { value: React.SetStateAction<string>; }; }) => {\r\n        setInputValue(e.currentTarget.value);\r\n    }\r\n\r\n    const handleComplete = (e: { currentTarget: { getAttribute: (arg0: string) => any; }; }) => {\r\n        console.log(\"handleComplete\");\r\n        const index = e.currentTarget.getAttribute(\"data-index\");\r\n        const newTodos = [...todos];\r\n        newTodos[index].completed = !newTodos[index].completed;\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const handleRemove = (e: { stopPropagation: () => void; currentTarget: { getAttribute: (arg0: string) => any; }; }) => {\r\n        e.stopPropagation();\r\n        const index = e.currentTarget.getAttribute(\"data-index\");\r\n        var taskToDelete = todos[index];\r\n        const newTodos = [...todos];\r\n        newTodos.splice(index, 1);\r\n        setTodos(newTodos);\r\n        removeTodo(taskToDelete.id);\r\n    };\r\n\r\n     const handleSubmit = (e: { preventDefault: () => void; }) => {\r\n            e.preventDefault();\r\n            if (!inputValue) return;\r\n            addTodos(inputValue);            \r\n            setInputValue('');\r\n    };\r\n\n    return (\r\n        <div className=\"contain\">\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n            <ul>                \r\n                {todos.map(({ text, completed, id }, i) => (\r\n                    <li\r\n                        aria-role=\"button\"\r\n                        className={completed ? 'complete' : \"\"}\r\n                        data-index={i}\r\n                        onClick={handleComplete}\r\n                    >\r\n                        <div> <input\r\n                            type=\"text\"\r\n                            value={text ?? \"\"}\r\n                            onChange={handleInputChange}\r\n                        /></div>\r\n\r\n                        <button\r\n                            aria-label={`remove todo ${i}`}\r\n                            className=\"remove\"\r\n                            data-index={i}\r\n                            onClick={handleRemove}\r\n                        />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}