{"ast":null,"code":"export const useApiClient = () => {\n  const baseUrl = \"https://localhost:7192/\";\n  const todoApriUrl = baseUrl + \"Todo\";\n\n  async function getTodos() {\n    console.log(todoApriUrl);\n    const response = await sendAnonymousRequest(\"GET\", todoApriUrl);\n    return response.status === 200 ? await response.json() : null;\n  }\n\n  async function sendAnonymousRequest(verb, url, payload) {\n    let request = {\n      method: verb,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Client-Version\": process.env.REACT_APP_VERSION,\n        \"Access-Control-Allow-Origin\": '*'\n      }\n    };\n    if (payload) request.body = JSON.stringify(payload);\n    const response = await fetch(url, request);\n    return response;\n  }\n\n  return {\n    getTodos\n  };\n};","map":{"version":3,"sources":["C:/Dev/TTT/TodoWebAppReact/src/Services/api/apiClient.ts"],"names":["useApiClient","baseUrl","todoApriUrl","getTodos","console","log","response","sendAnonymousRequest","status","json","verb","url","payload","request","method","headers","Accept","process","env","REACT_APP_VERSION","body","JSON","stringify","fetch"],"mappings":"AAgBA,OAAO,MAAMA,YAAY,GAAG,MAAM;AAE9B,QAAMC,OAAO,GAAG,yBAAhB;AACA,QAAMC,WAAW,GAAGD,OAAO,GAAG,MAA9B;;AAGA,iBAAeE,QAAf,GAA0B;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA,UAAMI,QAAQ,GAAG,MAAMC,oBAAoB,CAAC,KAAD,EAAQL,WAAR,CAA3C;AAEA,WAAOI,QAAQ,CAACE,MAAT,KAAoB,GAApB,GAA0B,MAAMF,QAAQ,CAACG,IAAT,EAAhC,GAAkD,IAAzD;AACH;;AAGD,iBAAeF,oBAAf,CACIG,IADJ,EAEIC,GAFJ,EAGIC,OAHJ,EAIE;AACE,QAAIC,OAAO,GAAG;AACVC,MAAAA,MAAM,EAAEJ,IADE;AAEVK,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB,kBAFX;AAGL,0BAAkBC,OAAO,CAACC,GAAR,CAAYC,iBAHzB;AAIL,uCAA+B;AAJ1B;AAFC,KAAd;AAUA,QAAIP,OAAJ,EAAaC,OAAO,CAACO,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeV,OAAf,CAAf;AAEb,UAAMN,QAAQ,GAAG,MAAMiB,KAAK,CAACZ,GAAD,EAAME,OAAN,CAA5B;AAEA,WAAOP,QAAP;AACH;;AAED,SAAO;AACHH,IAAAA;AADG,GAAP;AAGH,CAvCM","sourcesContent":["\r\ninterface TodoModel {\r\n    id: string;\r\n    dwsOrderStatus: string | null;\r\n    text: string | null;\r\n    completed: boolean | null;\r\n}\r\n\r\nexport interface HttpResponse<T> {\r\n    readonly ok: boolean;\r\n    readonly status: number;\r\n    readonly body: T | null;\r\n}\r\n\r\ndeclare const window: any;\r\n\r\nexport const useApiClient = () => {\r\n     \r\n    const baseUrl = \"https://localhost:7192/\";\r\n    const todoApriUrl = baseUrl + \"Todo\";\r\n\r\n\r\n    async function getTodos() {\r\n        console.log(todoApriUrl);\r\n        const response = await sendAnonymousRequest(\"GET\", todoApriUrl);\r\n\r\n        return response.status === 200 ? await response.json() : null;\r\n    }\r\n\r\n\r\n    async function sendAnonymousRequest(\r\n        verb: string,\r\n        url: string,\r\n        payload?: any\r\n    ) {\r\n        let request = {\r\n            method: verb,\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Client-Version\": process.env.REACT_APP_VERSION,\r\n                \"Access-Control-Allow-Origin\": '*'\r\n            },\r\n        } as any;\r\n\r\n        if (payload) request.body = JSON.stringify(payload);\r\n\r\n        const response = await fetch(url, request);\r\n\r\n        return response;\r\n    }\r\n\r\n    return {\r\n        getTodos\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}