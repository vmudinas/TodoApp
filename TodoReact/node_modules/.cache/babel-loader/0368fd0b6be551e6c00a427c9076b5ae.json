{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\TTT\\\\TodoWebAppReact\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { useApiClient } from './Services/api/apiClient';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let todosApi = useApiClient();\n  const [todos, setTodos] = useState([]);\n\n  const getTodos = async () => {\n    let response;\n    response = await todosApi.getTodos();\n    setTodos(response.body);\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []); //  return (\n  //    <div className=\"App\">\n  //      <header className=\"App-header\">\n  //        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //        <p>\n  //          Todo List A\n  //        </p>\n  //              {data.map((value: any, index: number) =>\n  //                  (<div>{value.id}</div>))}\n  //          </header>\n  //    </div>\n  //  );\n  //}\n  //     const accessibleClick = (e: React.KeyboardEvent<HTMLDivElement>) => {\n  //         console.log(\"Asdasd\");\n  //  if (e.key === 'Enter') { \n  //    onClick(e); \n  //  }\n  //};\n  //   const Br�ther = () => {\n\n  const [inputValue, setInputValue] = useState(\"\"); //const [todos, setTodos] = useState([\n  //    {\n  //        text: 'Share h��ks with the bretheren',\n  //        isComplete: false\n  //    },\n  //    {\n  //        text: 'Ask br�ther if you may have h��k',\n  //        isComplete: false\n  //    }\n  //]);\n\n  const addTodo = text => {\n    // const newTodos = [{ text }, ...todos];\n    //  setTodos(newTodos);\n    getTodos();\n  };\n\n  const handleInputChange = e => {\n    setInputValue(e.currentTarget.value);\n  };\n\n  const handleComplete = e => {\n    console.log(\"handleComplete\");\n    const index = e.currentTarget.getAttribute(\"data-index\");\n    const newTodos = [...todos];\n    newTodos[index].completed = !newTodos[index].completed;\n    setTodos(newTodos);\n  };\n\n  const handleRemove = e => {\n    e.stopPropagation();\n    const index = e.currentTarget.getAttribute(\"data-index\");\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!inputValue) return;\n    addTodo(inputValue);\n    setInputValue('');\n  };\n\n  const accessibleClick = onClick => e => {\n    if (e.key === 'Enter') {\n      onClick(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contain\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((_ref, i) => {\n        let {\n          text,\n          completed\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          \"aria-role\": \"button\",\n          className: completed ? 'complete' : \"\",\n          \"data-index\": i,\n          onClick: handleComplete,\n          onKeyPress: accessibleClick(handleComplete),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            \"aria-label\": `remove todo ${i}`,\n            className: \"remove\",\n            \"data-index\": i,\n            onClick: handleRemove\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"jhDsSQmIq8Lme85y5S6O9tJFGU8=\", false, function () {\n  return [useApiClient];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Dev/TTT/TodoWebAppReact/src/App.tsx"],"names":["React","useApiClient","useEffect","useState","App","todosApi","todos","setTodos","getTodos","response","body","inputValue","setInputValue","addTodo","text","handleInputChange","e","currentTarget","value","handleComplete","console","log","index","getAttribute","newTodos","completed","handleRemove","stopPropagation","splice","handleSubmit","preventDefault","accessibleClick","onClick","key","map","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { HttpResponse, useApiClient } from './Services/api/apiClient';\r\nimport { useEffect, useState } from 'react';\r\nimport { TodoModel } from './types/apiClient';\r\n\n function App() {\n\n     let todosApi = useApiClient();\n     const [todos, setTodos] = useState<TodoModel[]>([]);\n\n     const getTodos = async () => {\r\n         let response: HttpResponse<TodoModel[]>;\r\n\r\n         response = await todosApi.getTodos();\r\n         setTodos(response.body as TodoModel[]);\r\n        \r\n        \r\n     };\n \r\n     useEffect(() => {\r\n         getTodos();\r\n     }, [])\n\n//  return (\n//    <div className=\"App\">\n//      <header className=\"App-header\">\n//        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//        <p>\n//          Todo List A\n//        </p>\n//              {data.map((value: any, index: number) =>\r\n//                  (<div>{value.id}</div>))}\n//          </header>\n//    </div>\n//  );\n//}\n\n//     const accessibleClick = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n//         console.log(\"Asdasd\");\r\n//  if (e.key === 'Enter') { \r\n//    onClick(e); \r\n//  }\r\n//};\r\n\r\n\r\n  //   const Br�ther = () => {\r\n         const [inputValue, setInputValue] = useState(\"\");\r\n         //const [todos, setTodos] = useState([\r\n         //    {\r\n         //        text: 'Share h��ks with the bretheren',\r\n         //        isComplete: false\r\n         //    },\r\n         //    {\r\n         //        text: 'Ask br�ther if you may have h��k',\r\n         //        isComplete: false\r\n         //    }\r\n         //]);\r\n\r\n         const addTodo = (text: string) => {\r\n            // const newTodos = [{ text }, ...todos];\r\n           //  setTodos(newTodos);\r\n             getTodos();\r\n         };\r\n\r\n         const handleInputChange = (e: { currentTarget: { value: React.SetStateAction<string>; }; }) => {\r\n             setInputValue(e.currentTarget.value);\r\n         }\r\n\r\n         const handleComplete = (e: { currentTarget: { getAttribute: (arg0: string) => any; }; }) => {\r\n             console.log(\"handleComplete\");\r\n             const index = e.currentTarget.getAttribute(\"data-index\");\r\n             const newTodos = [...todos];\r\n             newTodos[index].completed = !newTodos[index].completed;\r\n             setTodos(newTodos);\r\n         };\r\n\r\n         const handleRemove = (e: { stopPropagation: () => void; currentTarget: { getAttribute: (arg0: string) => any; }; }) => {\r\n             e.stopPropagation();\r\n             const index = e.currentTarget.getAttribute(\"data-index\");\r\n             const newTodos = [...todos];\r\n             newTodos.splice(index, 1);\r\n             setTodos(newTodos);\r\n         };\r\n\r\n         const handleSubmit = (e: { preventDefault: () => void; }) => {\r\n             e.preventDefault();\r\n             if (!inputValue) return;\r\n             addTodo(inputValue);\r\n             setInputValue('');\r\n         };\n\n     const accessibleClick = onClick => (e: { preventDefault: () => void; }) => {\r\n         if (e.key === 'Enter') {\r\n             onClick(e);\r\n         }\r\n     };\n\n    return (\r\n        <div className=\"contain\">\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n            <ul>\r\n                {todos.map(({ text, completed }, i) => (\r\n                    <li\r\n                        aria-role=\"button\"\r\n                        className={completed ? 'complete' : \"\"}\r\n                        data-index={i}\r\n                        onClick={handleComplete}\r\n                        onKeyPress={accessibleClick(handleComplete)}\r\n                    >\r\n                        <div>{text}</div>\r\n                        <button\r\n                            aria-label={`remove todo ${i}`}\r\n                            className=\"remove\"\r\n                            data-index={i}\r\n                            onClick={handleRemove}\r\n                        />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}